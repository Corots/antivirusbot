from enum import Enum
from config.config_reader import config


class LangEnum(Enum):
    russian = 1
    english = 2


class CheckTypeEnum(Enum):
    file = 1
    link = 2


class CommandText:

    def get_start_text(lang: LangEnum):
        start_text = (
            "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–∞–Ω—Ç–∏–≤–∏—Ä—É—Å @awesomeantivirus_bot. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–∞–π–ª –∏–ª–∏ —Å—Å—ã–ª–∫—É –∏ —è –ø—Ä–æ–≤–µ—Ä—é –µ–≥–æ –ø–æ –±–∞–∑–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–æ–≤ virustotal.com",
            "Hi! I am @awesomeantivirus_bot, antivirusbot. Send my the file or link and I'll check it by antivirus base from virustotal.com",
        )

        if lang == LangEnum.russian:
            return start_text[0]
        else:
            return start_text[1]

    def get_about_text(lang: LangEnum):
        about_text = (
            "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–∞–Ω—Ç–∏–≤–∏—Ä—É—Å @awesomeantivirus_bot. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–∞–π–ª –∏–ª–∏ —Å—Å—ã–ª–∫—É –∏ —è –ø—Ä–æ–≤–µ—Ä—é –µ–≥–æ –ø–æ –±–∞–∑–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–æ–≤ virustotal.com",
            "Hi! I am @awesomeantivirus_bot, antivirusbot. Send my the file or link and I'll check it by antivirus base from virustotal.com",
        )

        if lang == LangEnum.russian:
            return about_text[0]
        else:
            return about_text[1]

    def get_stats_text(lang: LangEnum, files_number: int, links_number: int):
        if lang == LangEnum.russian:
            stats_text = f"–°–µ–≥–æ–¥–Ω—è –≤—ã –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ {files_number} —Ñ–∞–π–ª–∞/–æ–≤ –∏ {links_number} —Å—Å—ã–ª(–æ–∫)/(—É)"
        else:
            stats_text = (
                f"Today you checked {files_number} file/s –∏ {links_number} link/s"
            )

        return stats_text


class FileDialogText:

    def get_big_file_text(lang: LangEnum, filename: str, filesize: str):
        big_file_text = (
            f"–§–∞–π–ª {filename} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏. \n–ï–≥–æ —Ä–∞–∑–º–µ—Ä - <b>{filesize}</b>. \n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ <b>{config.max_size_mb} –ú–ë</b>",
            f"File {filename} is too big for analysis. \nIt's size is <b>{filesize}</b>. \nMaximum file size is <b>{config.max_size_mb} –ú–ë</b>",
        )

        if lang == LangEnum.russian:
            return big_file_text[0]
        else:
            return big_file_text[1]

    def get_cancel_check_text(lang: LangEnum, filename: str = None):
        cancel_check_text = (
            f"‚ùå –û—Ç–º–µ–Ω–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ {filename if filename else ''}",
            f"‚ùå File check cancelled for {filename if filename else ''}",
        )
        if lang == LangEnum.russian:
            return cancel_check_text[0]
        else:
            return cancel_check_text[1]

    def get_all_checked(lang: LangEnum, datatype: CheckTypeEnum):
        all_files_checked_text = ("–í—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã üòé", "All files checked üòé")

        all_links_checked_text = ("–í—Å–µ —Å—Å—ã–ª–∫–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã üòé", "All links checked üòé")

        if lang == LangEnum.russian:
            if datatype == CheckTypeEnum.file:
                return all_files_checked_text[0]
            else:
                return all_links_checked_text[0]
        else:
            if datatype == CheckTypeEnum.file:
                return all_files_checked_text[1]
            else:
                return all_links_checked_text[1]

    def get_limit_req_text(lang: LangEnum, limit: int, datatype: CheckTypeEnum):

        data = ""
        if datatype == CheckTypeEnum.file:
            if lang == LangEnum.russian:
                data = "—Ñ–∞–π–ª–æ–≤"
            else:
                data = "files"

        if datatype == CheckTypeEnum.link:
            if lang == LangEnum.russian:
                data = "—Å—Å—ã–ª–æ–∫"
            else:
                data = "links"

        files_req_limit_text = (
            f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞ –≤ {limit} {data} –≤ –¥–µ–Ω—å.",
            f"Sorry, you have reached the daily limit of {limit} for {data} analysis requests.",
        )
        if lang == LangEnum.russian:
            return files_req_limit_text[0]
        else:
            return files_req_limit_text[1]

    def get_error_analizing_text(
        lang: LangEnum, filename: str, datatype: CheckTypeEnum
    ):

        data = ""
        if datatype == CheckTypeEnum.file:
            if lang == LangEnum.russian:
                data = "—Ñ–∞–π–ª–∞"
            else:
                data = "file"

        if datatype == CheckTypeEnum.link:
            if lang == LangEnum.russian:
                data = "—Å—Å—ã–ª–∫–∏"
            else:
                data = "link"

        error_alalizing_text = (
            f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ {data} {filename}",
            f"Sorry, there was an error analyzing the {data} {filename}",
        )

        if lang == LangEnum.russian:
            return error_alalizing_text[0]
        else:
            return error_alalizing_text[1]

    @staticmethod
    def get_result_file_text(
        lang: LangEnum,
        dangerous_files: int,
        number_checks: int,
        filename: str,
        filesize: str,
        link: str,
    ):

        if lang == LangEnum.russian:
            result = f"""
{"‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è –í–Ω–∏–º–∞–Ω–∏–µ! –í —Ñ–∞–π–ª–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –≤–æ–∑–º–æ–∂–Ω—ã–µ —É–≥—Ä–æ–∑—ã!" if dangerous_files > 0 else ""}
üìÅ –ò–º—è —Ñ–∞–π–ª–∞ : {filename}
üíø –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ : {filesize}


ü¶† –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ <a href = '{link}'>{dangerous_files} —É–≥—Ä–æ–∑</a> –∏–∑ {number_checks} –ø—Ä–æ–≤–µ—Ä–æ–∫.
"""
        else:
            result = f"""
{"‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è Attention! Potential threats in this file!" if dangerous_files > 0 else ""}
üìÅ Name of the file : {filename}
üíø File size : {filesize}

ü¶† Found <a href = '{link}'>{dangerous_files} threats</a> doing {number_checks} checks.
"""
        return result

    @staticmethod
    def get_result_link_text(
        lang: LangEnum,
        dangerous_files: int,
        number_checks: int,
        orig_link: str,
        link: str,
        domain: str,
    ):
        if lang == LangEnum.russian:
            result = f"""
{"‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è –í–Ω–∏–º–∞–Ω–∏–µ! –í —Å—Å—ã–ª–∫–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –≤–æ–∑–º–æ–∂–Ω—ã–µ —É–≥—Ä–æ–∑—ã!" if dangerous_files > 0 else ""}       
üìÅ –°—Å—ã–ª–∫–∞ : {orig_link}
üåê –î–æ–º–µ–Ω : {domain}

ü¶† –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ <a href = '{link}'>{dangerous_files} —É–≥—Ä–æ–∑</a> –∏–∑ {number_checks} –ø—Ä–æ–≤–µ—Ä–æ–∫. 

{f"–°–µ—Ä–≤–∏—Å –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–¥–∏–≤–æ—Å—Ç–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –Ω–∞ —Å–∞–π—Ç–µ {domain} –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∞ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ—Ç —Å–∞–π—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤–∏—Ä—É—Å–æ–≤." if not dangerous_files > 0 else ""}
"""
        else:
            result = f"""
{"‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è Attention! Potential threats in this link!!" if dangerous_files > 0 else ""}       
üìÅ Link : {link}
üåê Domain : {domain}

ü¶† Found <a href = '{link}'>{dangerous_files} threats</a> doing {number_checks} checks. 

{f"Service doesnt guarantee the legitimacy of the information on {domain} - only check the link for viruses." if not dangerous_files > 0 else ""}
"""
        return result
